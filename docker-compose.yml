networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  redis:
  db:

services:
  vote:
    image: jcampos15/vote:dev
    build:
      context: ./vote
    depends_on:
      - redis
    ports:
      - 8080:80
    networks:
      - frontend
  
  redis:  # https://geshan.com.np/blog/2022/01/redis-docker/
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    volumes: 
      - redis:/data
    networks:
      - frontend
      - backend

  worker:
    image: jcampos15/worker:dev
    build:
      context: ./worker
    depends_on:
      - redis
      - db
    networks:
      - backend

  db:  # https://geshan.com.np/blog/2021/12/docker-postgres/#postgresql-with-docker-compose
    image: postgres:12-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - frontend
      - backend
  
  result:
    image: jcampos15/result:dev
    build:
      context: ./result
    depends_on:
      - db
    ports:
      - 8081:80
    networks:
      - frontend
